#include <iostream>
#include<algorithm>
#include <iterator>
using namespace std;

typedef enum {amarillo, azul, rojo, verde} tColor;
typedef struct {
    int inicio;
    int casilla;
    int six_count;
    tColor color;
}data;

string colorACadena(tColor color){
    if (color == rojo)
        return "Rojo";
    else if (color == amarillo)
        return "Amarillo";
    else if (color == azul)
        return "Azul";
    else return "Verde";
}

char letra(tColor color){
    if (color == rojo)
        return 'R';
    else if (color == amarillo)
        return 'M';
    else if (color == azul)
        return 'A';
    else return 'V';
}

int lanzardados(){
    string nothing;
    cout<<"\n\nPulsa enter para lanzar los dados --> ";
    cin.ignore();
    return rand() % 6 + 1;
}

tColor player_election(int i){
    int choosen=0;
    while (choosen > 4 || choosen < 1){
        cout<<"\nJugador "<< i <<", elige tu color:\n[1] Amarillo\n[2] Azul\n[3] Rojo\n[4] Verde\n--> ";
        cin >> choosen;
        if (choosen == 1){
            return amarillo;
        }
        else if (choosen == 2){
            return azul;
        }
        else if (choosen == 3){
            return rojo;
        }
        else{
            return verde;
        }
    }
}

int darCasillaInicio(tColor color){
    if (color == rojo){
        return 39;
    }
    else if (color == amarillo){
        return 5;
    }
    else if (color == azul){
        return 22;
    }
    else return 56;
}

void winner_is(int i){
    cout<<"\n\n\nEl ganador es el jugador "<<i<<"!!\nEnhorabuena!!"<<endl;
}
void tablero(){
    for (size_t i = 0; i < 68; i++){
        int casillas_seguras[] = {0, 5, 12, 17, 22, 29, 34, 39, 46, 51, 56, 63};
        bool segura = find(begin(casillas_seguras), end(casillas_seguras), i) != end(casillas_seguras);
        if (segura == 1){
            cout<<"O";
        }
        else{
            cout<<"-";
        }
    }
    cout<<endl;
}
int main(){
    int casillas_seguras[] = {0, 5, 12, 17, 22, 29, 34, 39, 46, 51, 56, 63},
    c = 1, winner = 0, dados;
    data uno, dos;
    uno.casilla = -1;
    dos.casilla = -1;
    uno.six_count = 0;
    dos.six_count = 0;
    uno.color = player_election(1);
    uno.inicio = darCasillaInicio(uno.color);
    dos.color = player_election(2);
    bool exists;

    while (uno.color == dos.color){
        cout<<"Porfavor, jugador 2, elige un color que no haya elegido el jugador 1"<<endl;
        dos.color = player_election(2);
    }

    dos.inicio = darCasillaInicio(dos.color);
    srand(time(NULL));

    cout<<"El jugador 1 es el color "<<colorACadena(uno.color)<<endl;
    cout<<"El jugador 2 es el color "<<colorACadena(dos.color)<<endl;
    while (winner == 0){
        tablero();
        for (size_t i = 0; i < 68; i++){
            if (i == uno.casilla){
                cout<<letra(uno.color);
            }
            else if (i == dos.casilla){
                cout<<letra(dos.color);
            }
            else{
                cout<<" ";
            }
        }
        cout<<endl;
        tablero();
        for (size_t i = 0; i < 68; i++){
            if (uno.casilla == -1 && i == uno.inicio){
                cout<<letra(uno.color);
            }
            else if (dos.casilla == -1 && i == dos.inicio){
                cout<<letra(dos.color);
            }
            else{
                cout<<" ";
            }
        }

        if ((c++ % 2) != 0){
            dados = lanzardados();
            cout<<"Jugador 1 has sacado "<<dados<<endl;
            exists = find(begin(casillas_seguras), end(casillas_seguras), uno.casilla + dados) != end(casillas_seguras);
            if (uno.casilla + dados == (uno.inicio - 5)){
                uno.casilla += dados;
                winner = 1;
            }
            else if ((uno.casilla + dados )> (uno.inicio - 5) && uno.casilla + dados < uno.inicio){
                continue;
            }
            else if (uno.casilla + dados >= 68){
                uno.casilla += dados;
                uno.casilla-=68;
            }
            else if (uno.casilla == -1 && dados == 5){
                uno.casilla = uno.inicio;
            }
            else if (uno.casilla == -1){
                continue;
            }
            else if (dados == 6){
                uno.six_count++;
                if (uno.six_count == 3){
                    uno.casilla = -1;
                    uno.six_count = 0;
                }
                else{
                    uno.casilla += dados;
                    c--;
                }
            }
            else if (uno.casilla + dados == dos.casilla){
                if (exists == 1){
                    uno.casilla+=dados;
                }
                else {
                    uno.casilla += dados;
                    dos.casilla = -1;
                }
            }
            else{
                uno.casilla += dados;
                uno.six_count = 0;
            }
        }

        else {
            dados = lanzardados();
            cout<<"Jugador 2 has sacado "<<dados<<endl;
            exists = find(begin(casillas_seguras), end(casillas_seguras), dos.casilla + dados) != end(casillas_seguras);
            if (dos.casilla + dados == (dos.inicio - 5)){
                dos.casilla += dados;
                winner = 1;
            }
            else if ((dos.casilla + dados )> (dos.inicio - 5) && dos.casilla + dados < dos.inicio){
                continue;
            }
            else if (dos.casilla + dados >= 68){
                dos.casilla += dados;
                dos.casilla-=68;
            }
            else if (dos.casilla == -1 && dados == 5){
                dos.casilla = dos.inicio;
            }
            else if (dos.casilla == -1){
                continue;
            }
            else if (dados == 6){
                dos.six_count++;
                if (dos.six_count == 3){
                    dos.casilla = -1;
                    dos.six_count = 0;
                }
                else{
                    dos.casilla += dados;
                    c--;
                }
            }
            else if (dos.casilla + dados == uno.casilla){
                if (exists == 1){
                    dos.casilla+=dados;
                }
                else {
                    dos.casilla += dados;
                    uno.casilla = -1;
                }
            }
            else{
                dos.casilla += dados;
                dos.six_count = 0;
            }
        }
    }
    winner_is(winner);
    return 0;
}
